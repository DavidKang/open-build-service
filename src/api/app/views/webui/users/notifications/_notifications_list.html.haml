.card
  .card-body
    - if notifications.empty?
      %p
        - case params[:type]
        - when 'reviews', 'comments', 'requests'
          There are no notifications for this filter
        - when 'done'
          Mark notifications as "Done" and they'll appear here
        - else
          There are no notifications, but there's a world of opportunities!
    - else
      .text-center
        %span.ml-3= page_entries_info notifications, entry_name: 'notification'
        = link_to_all unless notifications.total_pages == 1 && params['show_all'].nil?

      .list-group.list-group-flush.mt-3
        - notifications.each do |n|
          - notification = NotificationPresenter.new(n)
          .list-group-item.px-2.grid-container
            .notifiable
              = notification_icon(n.notifiable_type)
              = notification_link(notification)
              = request_state(notification)
            .actions.ml-auto.align-self-end.align-self-md-start
              = read_unread_link(notification)
            .content
              - if notification.kind_of_request
                %p.kind.text-word-break-all.m-0.mb-2= notification.kind_of_request
              %p.excerpt.d-none.d-md-block= notification.excerpt
            %small.who-when.d-flex.align-self-center.align-self-md-start.justify-content-start.justify-content-md-end
              = render partial: 'notification_avatars', locals: { notification: notification }
              %span.d-inline-block.text-nowrap.ml-2 #{time_ago_in_words(notification.created_at)} ago

      = paginate notifications, views_prefix: 'webui', window: 2
